server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs with enhanced container name extraction
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
            attrs: attrs
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: (?P<container_name>[a-zA-Z0-9_.-]+)
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
      - output:
          source: output

  # Alternative: Direct container name from file path
  - job_name: docker_direct
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker_direct
          __path__: /var/lib/docker/containers/*/*log
    pipeline_stages:
      - regex:
          expression: \/var\/lib\/docker\/containers\/(?P<container_id>[a-f0-9]{64})\/
          source: filename
      - docker: {}
      - labels:
          container_id:
      - output:
          source: output

  # Backend application logs specifically
  - job_name: backend
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
    pipeline_stages:
      - docker: {}
      - json:
          expressions:
            level: level
            msg: msg
            time: time
      - labels:
          level:
          compose_service:
      - timestamp:
          format: RFC3339Nano
          source: time